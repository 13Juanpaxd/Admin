--Proyecto Final - Administracion Base de Daton
--GRUPO 4



/****************************************************************************************************************************************************************
***                                                                        TABLESPACE                                                                         ***
****************************************************************************************************************************************************************/


--Creacion del Tablespace
CREATE TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS
DATAFILE 'C:\ORACLE\ORADATA\ORCL\fide_ropasclaras_final_tbs.dbf'
SIZE 100M
AUTOEXTEND ON
NEXT 50M MAXSIZE UNLIMITED
EXTENT MANAGEMENT LOCAL
SEGMENT SPACE MANAGEMENT AUTO;
/
/****************************************************************************************************************************************************************
***                                                                    USUARIOS Y PERFILES                                                                      ***
****************************************************************************************************************************************************************/

--Creacion de usuario
CREATE USER FIDE_ROPASCLARAS IDENTIFIED BY 12345
DEFAULT TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS
QUOTA UNLIMITED ON FIDE_ROPASCLARAS_FINAL_TBS;

GRANT DBA TO FIDE_ROPASCLARAS;
/

CREATE PROFILE FIDE_ROPASCLARAS_PROF LIMIT
SESSIONS_PER_USER 10
CPU_PER_SESSION UNLIMITED
IDLE_TIME 30
PASSWORD_LIFE_TIME 90;
ALTER USER FIDE_ROPASCLARAS PROFILE FIDE_ROPASCLARAS_PROF;
/
AUDIT ALL BY FIDE_ROPASCLARAS BY ACCESS;


/****************************************************************************************************************************************************************
***                                                                          TABLAS                                                                           ***
****************************************************************************************************************************************************************/
-- 1. Tabla ESTADO 
CREATE TABLE FIDE_ESTADO_TB (
    ID_Estado NUMBER CONSTRAINT FIDE_ESTADO_TB_ID_Estado_PK PRIMARY KEY,
    Nombre_estado VARCHAR2(100),
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 2. Tabla PAIS 
CREATE TABLE FIDE_PAIS_TB (
    ID_Pais NUMBER CONSTRAINT FIDE_PAIS_TB_ID_Pais_PK PRIMARY KEY,
    Nombre VARCHAR2(100),
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 3. Tabla PROVINCIA 
CREATE TABLE FIDE_PROVINCIA_TB (
    ID_Provincia NUMBER CONSTRAINT FIDE_PROVINCIA_TB_ID_Provincia_PK PRIMARY KEY,
    Nombre VARCHAR2(100),
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 4. Tabla CANTON 
CREATE TABLE FIDE_CANTON_TB (
    ID_Canton NUMBER CONSTRAINT FIDE_CANTON_TB_ID_Canton_PK PRIMARY KEY,
    Nombre VARCHAR2(100),
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 5. Tabla DISTRITO 
CREATE TABLE FIDE_DISTRITO_TB (
    ID_Distrito NUMBER CONSTRAINT FIDE_DISTRITO_TB_ID_Distrito_PK PRIMARY KEY,
    Nombre VARCHAR2(100),
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 6. Tabla CLIENTES 
CREATE TABLE FIDE_CLIENTES_TB (
    ID_Cliente NUMBER CONSTRAINT FIDE_CLIENTES_TB_ID_Cliente_PK PRIMARY KEY,
    Nombre VARCHAR2(100),
    Telefono VARCHAR2(15),
    Cedula NUMBER CONSTRAINT FIDE_CLIENTES_TB_Cedula_UQ UNIQUE,
    Correo VARCHAR2(50) CONSTRAINT FIDE_CLIENTES_TB_Correo_UQ UNIQUE,
    Pais NUMBER, 
    Provincia NUMBER,
    Canton NUMBER,
    Distrito NUMBER,
    Foto BLOB,
    Estado_ID NUMBER,
    CREADO_POR VARCHAR2(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR2(100)
)  TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 7. Tabla PROVEEDORES 
CREATE TABLE FIDE_PROVEEDORES_TB (
    ID_Proveedor NUMBER CONSTRAINT FIDE_PROVEEDORES_TB_ID_Proveedor_PK PRIMARY KEY,
    Nombre VARCHAR2(100),
    Detalles VARCHAR2(250),
    Estado_ID NUMBER,
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 8. Tabla INVENTARIO 
CREATE TABLE FIDE_INVENTARIO_TB (
    ID_Producto NUMBER CONSTRAINT FIDE_INVENTARIO_TB_ID_Producto_PK PRIMARY KEY,
    Nombre VARCHAR2(100),
    Imagen BLOB,
    Precio NUMBER,
    Detalle VARCHAR2(250),
    Cantidad NUMBER,
    Categoria VARCHAR2(50),
    Proveedor_ID NUMBER,
    Estado_ID NUMBER, 
    Fecha_Entrada DATE,
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 9. Tabla FEEDBACK
CREATE TABLE FIDE_FEEDBACK_TB (
    ID_Feedback NUMBER CONSTRAINT FIDE_FEEDBACK_TB_ID_Feedback_PK PRIMARY KEY,
    Cliente_ID NUMBER, 
    Comentario VARCHAR2(500),
    Estado_ID NUMBER, 
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 10. Tabla CARRITO 
CREATE TABLE FIDE_CARRITO_TB (
    ID_Carrito NUMBER CONSTRAINT FIDE_CARRITO_TB_ID_Carrito_PK PRIMARY KEY,
    Producto_ID NUMBER, 
    Cantidad NUMBER,
    Subtotal NUMBER,
    Estado_ID NUMBER,  
    Cliente_ID NUMBER,
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 11. Tabla CARRITO TEMP
CREATE TABLE FIDE_CARRITO_TEMP_TB (
    ID_Carrito_Temp NUMBER CONSTRAINT FIDE_CARRITO_TB_ID_Carrito_Temp_PK PRIMARY KEY,
    Producto_ID NUMBER, 
    Cantidad NUMBER,
    Subtotal NUMBER,
    Estado_ID NUMBER,  
    Cliente_ID NUMBER,
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 12. Tabla METODO_PAGO 
CREATE TABLE FIDE_METODO_PAGO_TB (
    ID_Metodo NUMBER CONSTRAINT FIDE_METODO_PAGO_TB_ID_Metodo_PK PRIMARY KEY,
    Descripcion VARCHAR2(100),
    Estado_ID NUMBER,
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 13. Tabla FACTURA 
CREATE TABLE FIDE_FACTURA_TB (
    ID_Factura NUMBER CONSTRAINT FIDE_FACTURA_TB_ID_Factura_PK PRIMARY KEY,
    Cliente_ID NUMBER, 
    Metodo_ID NUMBER, 
    Detalle VARCHAR2(500),
    TotalDeLineas NUMBER,
    Total NUMBER,
    Subtotal NUMBER,
    IVA NUMBER,
    Costo_Envio NUMBER,
    Estado_ID NUMBER,  
    Carrito_ID NUMBER,
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 14. Tabla ENVIOS 
CREATE TABLE FIDE_ENVIOS_TB (
    ID_Envios NUMBER CONSTRAINT FIDE_ENVIOS_TB_ID_Envios_PK PRIMARY KEY,
    Cliente_ID NUMBER, 
    Producto_ID NUMBER,
    Empresa_ID NUMBER, 
    Estado_ID NUMBER,  
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;

-- 15. Tabla EMPRESA ENVIOS 
CREATE TABLE FIDE_EMPRESA_ENVIOS_TB (
    ID_Mensajero NUMBER CONSTRAINT FIDE_EMPRESA_ENVIOS_TB_ID_Mensajero_PK PRIMARY KEY,
    Empresa VARCHAR2(100),
    Precio NUMBER,
    Estado_ID NUMBER CONSTRAINT FIDE_EMPRESA_ENVIOS_TB_Estado_ID_FK REFERENCES FIDE_ESTADO_TB(ID_Estado),
    CREADO_POR VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION TIMESTAMP,
    ESTADO VARCHAR2(10),
    ACCION VARCHAR(100)
) TABLESPACE FIDE_ROPASCLARAS_FINAL_TBS;



/****************************************************************************************************************************************************************
***                                                                          TABLAS                                                                           ***
****************************************************************************************************************************************************************/
-- Agregar FK a FIDE_CLIENTES_TB
ALTER TABLE FIDE_CLIENTES_TB ADD CONSTRAINT FIDE_CLIENTES_TB_Pais_FK FOREIGN KEY (Pais) REFERENCES FIDE_PAIS_TB(ID_Pais);
ALTER TABLE FIDE_CLIENTES_TB ADD CONSTRAINT FIDE_CLIENTES_TB_Provincia_FK FOREIGN KEY (Provincia) REFERENCES FIDE_PROVINCIA_TB(ID_Provincia);
ALTER TABLE FIDE_CLIENTES_TB ADD CONSTRAINT FIDE_CLIENTES_TB_Canton_FK FOREIGN KEY (Canton) REFERENCES FIDE_CANTON_TB(ID_Canton);
ALTER TABLE FIDE_CLIENTES_TB ADD CONSTRAINT FIDE_CLIENTES_TB_Distrito_FK FOREIGN KEY (Distrito) REFERENCES FIDE_DISTRITO_TB(ID_Distrito);
ALTER TABLE FIDE_CLIENTES_TB ADD CONSTRAINT FIDE_CLIENTES_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);

-- Agregar FK a FIDE_PROVEEDORES_TB
ALTER TABLE FIDE_PROVEEDORES_TB ADD CONSTRAINT FIDE_PROVEEDORES_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);

-- Agregar FK a FIDE_INVENTARIO_TB
ALTER TABLE FIDE_INVENTARIO_TB ADD CONSTRAINT FIDE_INVENTARIO_TB_Proveedor_ID_FK FOREIGN KEY (Proveedor_ID) REFERENCES FIDE_PROVEEDORES_TB(ID_Proveedor);
ALTER TABLE FIDE_INVENTARIO_TB ADD CONSTRAINT FIDE_INVENTARIO_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);

-- Agregar FK a FIDE_FEEDBACK_TB
ALTER TABLE FIDE_FEEDBACK_TB ADD CONSTRAINT FIDE_FEEDBACK_TB_Cliente_ID_FK FOREIGN KEY (Cliente_ID) REFERENCES FIDE_CLIENTES_TB(ID_Cliente);
ALTER TABLE FIDE_FEEDBACK_TB ADD CONSTRAINT FIDE_FEEDBACK_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);

-- Agregar FK a FIDE_CARRITO_TB
ALTER TABLE FIDE_CARRITO_TB ADD CONSTRAINT FIDE_CARRITO_TB_Producto_ID_FK FOREIGN KEY (Producto_ID) REFERENCES FIDE_INVENTARIO_TB(ID_Producto);
ALTER TABLE FIDE_CARRITO_TB ADD CONSTRAINT FIDE_CARRITO_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);
ALTER TABLE FIDE_CARRITO_TB ADD CONSTRAINT FIDE_CARRITO_TB_Cliente_ID_FK FOREIGN KEY (Cliente_ID) REFERENCES FIDE_CLIENTES_TB(ID_Cliente);

--Agregar FK a FIDE_CARRITO_TEMP_TB
ALTER TABLE FIDE_CARRITO_TEMP_TB ADD CONSTRAINT FIDE_CARRITO_TEMP_TB_Producto_ID_FK FOREIGN KEY (Producto_ID) REFERENCES FIDE_INVENTARIO_TB(ID_Producto);
ALTER TABLE FIDE_CARRITO_TEMP_TB ADD CONSTRAINT FIDE_CARRITO_TEMP_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);
ALTER TABLE FIDE_CARRITO_TEMP_TB ADD CONSTRAINT FIDE_CARRITO_TEMP_TB_Cliente_ID_FK FOREIGN KEY (Cliente_ID) REFERENCES FIDE_CLIENTES_TB(ID_Cliente);

-- Agregar FK a FIDE_METODO_PAGO_TB
ALTER TABLE FIDE_METODO_PAGO_TB ADD CONSTRAINT FIDE_METODO_PAGO_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);

-- Agregar FK a FIDE_FACTURA_TB
ALTER TABLE FIDE_FACTURA_TB ADD CONSTRAINT FIDE_FACTURA_TB_Cliente_ID_FK FOREIGN KEY (Cliente_ID) REFERENCES FIDE_CLIENTES_TB(ID_Cliente);
ALTER TABLE FIDE_FACTURA_TB ADD CONSTRAINT FIDE_FACTURA_TB_Metodo_ID_FK FOREIGN KEY (Metodo_ID) REFERENCES FIDE_METODO_PAGO_TB(ID_Metodo);
ALTER TABLE FIDE_FACTURA_TB ADD CONSTRAINT FIDE_FACTURA_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);

-- Agregar FK a FIDE_ENVIOS_TB
ALTER TABLE FIDE_ENVIOS_TB ADD CONSTRAINT FIDE_ENVIOS_TB_Cliente_ID_FK FOREIGN KEY (Cliente_ID) REFERENCES FIDE_CLIENTES_TB(ID_Cliente);
ALTER TABLE FIDE_ENVIOS_TB ADD CONSTRAINT FIDE_ENVIOS_TB_Producto_ID_FK FOREIGN KEY (Producto_ID) REFERENCES FIDE_INVENTARIO_TB(ID_Producto);
ALTER TABLE FIDE_ENVIOS_TB ADD CONSTRAINT FIDE_ENVIOS_TB_Empresa_ID_FK FOREIGN KEY (Empresa_ID) REFERENCES FIDE_EMPRESA_ENVIOS_TB(ID_Mensajero);
ALTER TABLE FIDE_ENVIOS_TB ADD CONSTRAINT FIDE_ENVIOS_TB_Estado_ID_FK FOREIGN KEY (Estado_ID) REFERENCES FIDE_ESTADO_TB(ID_Estado);

/****************************************************************************************************************************************************************
***                                                                    TRIGGERS Y SECUENCIAS                                                                  ***
****************************************************************************************************************************************************************/
-- 1. Tabla FIDE_ESTADO_TB
CREATE SEQUENCE ID_ESTADO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_ESTADO_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_ESTADO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Estado IS NULL THEN
            SELECT ID_ESTADO_SEQ.NEXTVAL INTO :NEW.ID_Estado FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 2. Tabla FIDE_PAIS_TB
CREATE SEQUENCE ID_PAIS_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_PAIS_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_PAIS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Pais IS NULL THEN
            SELECT ID_PAIS_SEQ.NEXTVAL INTO :NEW.ID_Pais FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 3. Tabla FIDE_PROVINCIA_TB
CREATE SEQUENCE ID_PROVINCIA_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVINCIA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Provincia IS NULL THEN
            SELECT ID_PROVINCIA_SEQ.NEXTVAL INTO :NEW.ID_Provincia FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 4. Tabla FIDE_CANTON_TB
CREATE SEQUENCE ID_CANTON_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_CANTON_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_CANTON_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Canton IS NULL THEN
            SELECT ID_CANTON_SEQ.NEXTVAL INTO :NEW.ID_Canton FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 5. Tabla FIDE_DISTRITO_TB
CREATE SEQUENCE ID_DISTRITO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_DISTRITO_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_DISTRITO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Distrito IS NULL THEN
            SELECT ID_DISTRITO_SEQ.NEXTVAL INTO :NEW.ID_Distrito FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 6. Tabla FIDE_CLIENTES_TB
CREATE SEQUENCE ID_CLIENTES_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_CLIENTES_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_CLIENTES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Cliente IS NULL THEN
            SELECT ID_CLIENTES_SEQ.NEXTVAL INTO :NEW.ID_Cliente FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 7. Tabla FIDE_PROVEEDORES_TB
CREATE SEQUENCE ID_PROVEEDORES_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_PROVEEDORES_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVEEDORES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Proveedor IS NULL THEN
            SELECT ID_PROVEEDORES_SEQ.NEXTVAL INTO :NEW.ID_Proveedor FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 8. Tabla FIDE_INVENTARIO_TB
CREATE SEQUENCE ID_INVENTARIO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_INVENTARIO_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_INVENTARIO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Producto IS NULL THEN
            SELECT ID_INVENTARIO_SEQ.NEXTVAL INTO :NEW.ID_Producto FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 9. Tabla FIDE_FEEDBACK_TB
CREATE SEQUENCE ID_FEEDBACK_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_FEEDBACK_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_FEEDBACK_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Feedback IS NULL THEN
            SELECT ID_FEEDBACK_SEQ.NEXTVAL INTO :NEW.ID_Feedback FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 10. Tabla FIDE_CARRITO_TB
CREATE SEQUENCE ID_CARRITO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_CARRITO_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_CARRITO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Carrito IS NULL THEN
            SELECT ID_CARRITO_SEQ.NEXTVAL INTO :NEW.ID_Carrito FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 11. Tabla FIDE_CARRITO_TEMP_TB
CREATE SEQUENCE ID_CARRITO_TEMP_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_CARRITO_TEMP_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_CARRITO_TEMP_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Carrito_Temp IS NULL THEN
            SELECT ID_CARRITO_TEMP_SEQ.NEXTVAL INTO :NEW.ID_Carrito_Temp FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 12. Tabla FIDE_METODO_PAGO_TB
CREATE SEQUENCE ID_METODO_PAGO_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_METODO_PAGO_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_METODO_PAGO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Metodo IS NULL THEN
            SELECT ID_METODO_PAGO_SEQ.NEXTVAL INTO :NEW.ID_Metodo FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 13. Tabla FIDE_FACTURA_TB
CREATE SEQUENCE ID_FACTURA_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_FACTURA_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_FACTURA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Factura IS NULL THEN
            SELECT ID_FACTURA_SEQ.NEXTVAL INTO :NEW.ID_Factura FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 14. Tabla FIDE_ENVIOS_TB
CREATE SEQUENCE ID_ENVIOS_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_ENVIOS_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_ENVIOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Envios IS NULL THEN
            SELECT ID_ENVIOS_SEQ.NEXTVAL INTO :NEW.ID_Envios FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- 15. Tabla FIDE_EMPRESA_ENVIOS_TB
CREATE SEQUENCE ID_EMPRESA_ENVIOS_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER FIDE_EMPRESA_ENVIOS_TB_TRG
BEFORE INSERT OR UPDATE ON FIDE_EMPRESA_ENVIOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.ID_Mensajero IS NULL THEN
            SELECT ID_EMPRESA_ENVIOS_SEQ.NEXTVAL INTO :NEW.ID_Mensajero FROM DUAL;
        END IF;
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
        :NEW.CREADO_POR := USER;
        :NEW.ACCION := 'INSERT';
        :NEW.ESTADO := 'A';
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
        :NEW.MODIFICADO_POR := USER;
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

/****************************************************************************************************************************************************************
***                                                                    Procedimiento Almacenados                                                              ***
****************************************************************************************************************************************************************/
--1. Procedimiento para FIDE_ESTADO_TB
CREATE OR REPLACE PROCEDURE FIDE_ESTADO_TB_INSERTAR_SP (
    V_ID_Estado IN NUMBER,
    V_Nombre IN VARCHAR2
) IS
BEGIN
    INSERT INTO FIDE_ESTADO_TB (ID_Estado, Nombre)
    VALUES (V_ID_Estado, V_Nombre);
    COMMIT;
END FIDE_ESTADO_TB_INSERTAR_SP;
/

--2. Procedimiento para FIDE_PAIS_TB
CREATE OR REPLACE PROCEDURE FIDE_PAIS_TB_INSERTAR_SP (
    V_ID_Pais IN NUMBER,
    V_Nombre IN VARCHAR2
) IS
BEGIN
    INSERT INTO FIDE_PAIS_TB (ID_Pais, Nombre)
    VALUES (V_ID_Pais, V_Nombre);
    COMMIT;
END FIDE_PAIS_TB_INSERTAR_SP;
/

--3. Procedimiento para FIDE_PROVINCIA_TB
CREATE OR REPLACE PROCEDURE FIDE_PROVINCIA_TB_INSERTAR_SP (
    V_ID_Provincia IN NUMBER,
    V_Nombre IN VARCHAR2,
    V_ID_Pais IN NUMBER
) IS
BEGIN
    INSERT INTO FIDE_PROVINCIA_TB (ID_Provincia, Nombre, ID_Pais)
    VALUES (V_ID_Provincia, V_Nombre, V_ID_Pais);
    COMMIT;
END FIDE_PROVINCIA_TB_INSERTAR_SP;
/

--4. Procedimiento para FIDE_CANTON_TB
CREATE OR REPLACE PROCEDURE FIDE_CANTON_TB_INSERTAR_SP (
    V_ID_Canton IN NUMBER,
    V_Nombre IN VARCHAR2,
    V_ID_Provincia IN NUMBER
) IS
BEGIN
    INSERT INTO FIDE_CANTON_TB (ID_Canton, Nombre, ID_Provincia)
    VALUES (V_ID_Canton, V_Nombre, V_ID_Provincia);
    COMMIT;
END FIDE_CANTON_TB_INSERTAR_SP;
/

--5. Procedimiento para FIDE_DISTRITO_TB
CREATE OR REPLACE PROCEDURE FIDE_DISTRITO_TB_INSERTAR_SP (
    V_ID_Distrito IN NUMBER,
    V_Nombre IN VARCHAR2,
    V_ID_Canton IN NUMBER
) IS
BEGIN
    INSERT INTO FIDE_DISTRITO_TB (ID_Distrito, Nombre, ID_Canton)
    VALUES (V_ID_Distrito, V_Nombre, V_ID_Canton);
    COMMIT;
END FIDE_DISTRITO_TB_INSERTAR_SP;
/

-- 6. Procedimiento para FIDE_CLIENTES_TB
CREATE OR REPLACE PROCEDURE FIDE_CLIENTES_TB_INSERTAR_SP (
    V_ID_Cliente IN NUMBER,
    V_Nombre IN VARCHAR2,
    V_Apellido IN VARCHAR2,
    V_Email IN VARCHAR2,
    V_Telefono IN VARCHAR2
) IS
BEGIN
    INSERT INTO FIDE_CLIENTES_TB (ID_Cliente, Nombre, Apellido, Email, Telefono)
    VALUES (V_ID_Cliente, V_Nombre, V_Apellido, V_Email, V_Telefono);
    COMMIT;
END FIDE_CLIENTES_TB_INSERTAR_SP;
/

-- 7. Procedimiento para FIDE_PROVEEDORES_TB
CREATE OR REPLACE PROCEDURE FIDE_PROVEEDORES_TB_INSERTAR_SP (
    V_ID_Proveedor IN NUMBER,
    V_Nombre IN VARCHAR2,
    V_Tipo IN VARCHAR2
) IS
BEGIN
    INSERT INTO FIDE_PROVEEDORES_TB (ID_Proveedor, Nombre, Tipo)
    VALUES (V_ID_Proveedor, V_Nombre, V_Tipo);
    COMMIT;
END FIDE_PROVEEDORES_TB_INSERTAR_SP;
/

-- 8. Procedimiento para FIDE_INVENTARIO_TB
CREATE OR REPLACE PROCEDURE FIDE_INVENTARIO_TB_INSERTAR_SP (
    V_ID_Producto IN NUMBER,
    V_Nombre IN VARCHAR2,
    V_Cantidad IN NUMBER,
    V_Precio IN NUMBER
) IS
BEGIN
    INSERT INTO FIDE_INVENTARIO_TB (ID_Producto, Nombre, Cantidad, Precio)
    VALUES (V_ID_Producto, V_Nombre, V_Cantidad, V_Precio);
    COMMIT;
END FIDE_INVENTARIO_TB_INSERTAR_SP;
/

--9.Procedimiento para FIDE_CARRITO_TB
CREATE OR REPLACE PROCEDURE FIDE_CARRITO_TB_INSERTAR_SP (
    V_ID_Carrito IN NUMBER,
    V_ID_Cliente IN NUMBER,
    V_Fecha_Creacion IN DATE
) IS
BEGIN
    INSERT INTO FIDE_CARRITO_TB (ID_Carrito, ID_Cliente, Fecha_Creacion)
    VALUES (V_ID_Carrito, V_ID_Cliente, V_Fecha_Creacion);
    COMMIT;
END FIDE_CARRITO_TB_INSERTAR_SP;
/

--10. Procedimiento para FIDE_CARRITO_TEMP_TB
CREATE OR REPLACE PROCEDURE FIDE_CARRITO_TEMP_TB_INSERTAR_SP (
    V_ID_Carrito_Temp IN NUMBER,
    V_ID_Carrito IN NUMBER,
    V_ID_Producto IN NUMBER,
    V_Cantidad IN NUMBER
) IS
BEGIN
    INSERT INTO FIDE_CARRITO_TEMP_TB (ID_Carrito_Temp, ID_Carrito, ID_Producto, Cantidad)
    VALUES (V_ID_Carrito_Temp, V_ID_Carrito, V_ID_Producto, V_Cantidad);
    COMMIT;
END FIDE_CARRITO_TEMP_TB_INSERTAR_SP;
/

--11.  Procedimiento para FIDE_METODO_PAGO_TB
CREATE OR REPLACE PROCEDURE FIDE_METODO_PAGO_TB_INSERTAR_SP (
    V_ID_Metodo IN NUMBER,
    V_Nombre IN VARCHAR2
) IS
BEGIN
    INSERT INTO FIDE_METODO_PAGO_TB (ID_Metodo, Nombre)
    VALUES (V_ID_Metodo, V_Nombre);
    COMMIT;
END FIDE_METODO_PAGO_TB_INSERTAR_SP;
/

--12. Procedimiento para FIDE_FACTURA_TB
CREATE OR REPLACE PROCEDURE FIDE_FACTURA_TB_INSERTAR_SP (
    V_ID_Factura IN NUMBER,
    V_Fecha IN DATE,
    V_Monto IN NUMBER,
    V_ID_Cliente IN NUMBER
) IS
BEGIN
    INSERT INTO FIDE_FACTURA_TB (ID_Factura, Fecha, Monto, ID_Cliente)
    VALUES (V_ID_Factura, V_Fecha, V_Monto, V_ID_Cliente);
    COMMIT;
END FIDE_FACTURA_TB_INSERTAR_SP;
/

--13. Procedimiento para FIDE_ENVIOS_TB
CREATE OR REPLACE PROCEDURE FIDE_ENVIOS_TB_INSERTAR_SP (
    V_ID_Envios IN NUMBER,
    V_ID_Factura IN NUMBER,
    V_Direccion IN VARCHAR2,
    V_Fecha_Envio IN DATE
) IS
BEGIN
    INSERT INTO FIDE_ENVIOS_TB (ID_Envios, ID_Factura, Direccion, Fecha_Envio)
    VALUES (V_ID_Envios, V_ID_Factura, V_Direccion, V_Fecha_Envio);
    COMMIT;
END FIDE_ENVIOS_TB_INSERTAR_SP;
/

--14. Procedimiento para FIDE_EMPRESA_ENVIOS_TB
CREATE OR REPLACE PROCEDURE FIDE_EMPRESA_ENVIOS_TB_INSERTAR_SP (
    V_ID_Mensajero IN NUMBER,
    V_Nombre IN VARCHAR2,
    V_Tipo IN VARCHAR2
) IS
BEGIN
    INSERT INTO FIDE_EMPRESA_ENVIOS_TB (ID_Mensajero, Nombre, Tipo)
    VALUES (V_ID_Mensajero, V_Nombre, V_Tipo);
    COMMIT;
END FIDE_EMPRESA_ENVIOS_TB_INSERTAR_SP;
/



